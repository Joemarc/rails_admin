- is_recurrent = service.recurrent?
- class_name = is_recurrent ? 'recurrent' : 'one-time'

.service-card-wrapper.col-lg-6
  .service-card{class: class_name}
    .head
      - if is_recurrent
        .badge
          Recurrente
          =image_tag("recurrence.png", {:title => 'Servicio recurrente'})

      .title
        - if is_recurrent
          Todos los #{ensure_plural(service.weekday_in_spanish) }
        - else 
          = service.friendly_date.capitalize
      .small-letters
        = service.friendly_time

    .body
      %ul.summary
        %li.checked
          Aliada: #{ service.aliada.name }
        %li.checked
          Pago: #{service.user.payment_provider_name}
        %li.checked
          Dirección: #{service.address.name}
        %li.checked
          Datos de contacto: #{service.user.contact_data}
    .foot
      .actions
        - if current_user.admin?
          .div
            = service.id
          .div
            = service.status_in_spanish
        
        - if is_recurrent
          = link_to show_recurrence_services_users_path(user_id: service.user.id, recurrence_id: service.recurrence.id), class: 'action-button size-large' do
            %span.icon-clock.icon-button
            Próximos servicios

          = link_to edit_service_users_path(user_id: service.user.id, service_id: service.id), class: 'action-button size-large' do
            %span.icon-pencil.icon-button
            Modificar servicios

        - else
          .actions
            = link_to edit_service_users_path(user_id: service.user.id, service_id: service.id), class: 'action-button size-large' do
              %span.icon-pencil.icon-button
              Modificar servicio

      .numbers
        %span.hours #{ seconds_to_hours_minutes_in_spanish service.estimated_hours_with_extras }
        %span.cash $#{ ceil_and_strip_insignificat_zeros service.cost } 
